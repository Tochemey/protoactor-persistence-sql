-- name: create-journal-sequence
CREATE SEQUENCE JOURNAL__ORDERING_SEQ START WITH 1 INCREMENT BY 1 NOMAXVALUE
/

-- name: create-journal-table
CREATE TABLE JOURNAL
(
    ORDERING        NUMERIC UNIQUE,
    PERSISTENCE_ID  VARCHAR(255)      NOT NULL,
    SEQUENCE_NUMBER NUMERIC           NOT NULL,
    WRITER_ID       VARCHAR(255)      NOT NULL,
    TIMESTAMP       NUMBER(19)        NOT NULL,
    MANIFEST        VARCHAR(255),
    PAYLOAD         BLOB              NOT NULL,
    DELETED         CHAR(1) DEFAULT 0 NOT NULL check (DELETED in (0, 1)),
    PRIMARY KEY (PERSISTENCE_ID, SEQUENCE_NUMBER)
)
/

-- name: create-journal-sequence-trigger
CREATE OR REPLACE TRIGGER JOURNAL__ORDERING_TRG
    before insert
    on JOURNAL
    REFERENCING NEW AS NEW
    FOR EACH ROW
    WHEN (new.ORDERING is null)
begin
    select JOURNAL__ORDERING_seq.nextval into :new.ORDERING from sys.dual;
end;
/

-- name: create-snapshot-table
CREATE TABLE SNAPSHOT
(
    PERSISTENCE_ID  VARCHAR(255) NOT NULL,
    SEQUENCE_NUMBER NUMERIC      NOT NULL,
    TIMESTAMP       NUMERIC      NOT NULL,
    SNAPSHOT        BLOB         NOT NULL,
    MANIFEST        VARCHAR(255),
    WRITER_ID       VARCHAR(255) NOT NULL,
    PRIMARY KEY (PERSISTENCE_ID, SEQUENCE_NUMBER)
)
/

-- name: create-reset-sequence
CREATE OR REPLACE PROCEDURE "reset_sequence"
    IS
    l_value NUMBER;
BEGIN
    EXECUTE IMMEDIATE 'SELECT JOURNAL__ORDERING_SEQ.nextval FROM dual' INTO l_value;
    EXECUTE IMMEDIATE 'ALTER SEQUENCE JOURNAL__ORDERING_SEQ INCREMENT BY -' || l_value || ' MINVALUE 0';
    EXECUTE IMMEDIATE 'SELECT JOURNAL__ORDERING_SEQ.nextval FROM dual' INTO l_value;
    EXECUTE IMMEDIATE 'ALTER SEQUENCE JOURNAL__ORDERING_SEQ INCREMENT BY 1 MINVALUE 0';
END;
/

-- name: create-journal
INSERT INTO JOURNAL(PERSISTENCE_ID, SEQUENCE_NUMBER, WRITER_ID, TIMESTAMP, MANIFEST, PAYLOAD)
VALUES (?, ?, ?, ?, ?, ?);
/

-- name: create-snapshot
INSERT INTO SNAPSHOT(PERSISTENCE_ID, SEQUENCE_NUMBER, TIMESTAMP, SNAPSHOT, MANIFEST, WRITER_ID)
VALUES (?, ?, ?, ?, ?, ?);
/